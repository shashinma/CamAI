from imutils import paths
import face_recognition
import pickle
import cv2
import os

def DataUpdate():
    if(os.path.exists('Data/TrainingDB') == True):
        os.remove('Data/TrainingDB')
    print("\n\n" + "üåÄ Data updating...")

    # –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ Images —Ö—Ä–∞–Ω—è—Ç—Å—è –ø–∞–ø–∫–∏ —Å–æ –≤—Å–µ–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
    imagePaths = list(paths.list_images('Data/Images'))
    knownEncodings = []
    knownNames = []
    # –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –ø–∞–ø–∫–∏ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
    for (i, imagePath) in enumerate(imagePaths):
        # –∏–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è —á–µ–ª–æ–≤–µ–∫–∞ –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è –ø–∞–ø–∫–∏
        name = imagePath.split(os.path.sep)[-2]
        # –∑–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –µ–≥–æ –∏–∑ BGR (OpenCV ordering)
        # –≤ dlib ordering (RGB)
        image = cv2.imread(imagePath)
        rgb = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
        #–∏—Å–ø–æ–ª—å–∑—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É Face_recognition –¥–ª—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –ª–∏—Ü
        boxes = face_recognition.face_locations(rgb,model='hog')
        # –≤—ã—á–∏—Å–ª—è–µ–º —ç–º–±–µ–¥–¥–∏–Ω–≥–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ª–∏—Ü–∞
        encodings = face_recognition.face_encodings(rgb, boxes)
        # loop over the encodings
        for encoding in encodings:
            knownEncodings.append(encoding)
            knownNames.append(name)
    # —Å–æ—Ö—Ä–∞–Ω–∏–º —ç–º–±–µ–¥–¥–∏–Ω–≥–∏ –≤–º–µ—Å—Ç–µ —Å –∏—Ö –∏–º–µ–Ω–∞–º–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å–ª–æ–≤–∞—Ä—è
    data = {"encodings": knownEncodings, "names": knownNames}
    # –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ pickle
    f = open("Data/TrainingDB", "wb")
    f.write(pickle.dumps(data))
    f.close()
    print("‚úÖ Data successfully updated..."+"\n")